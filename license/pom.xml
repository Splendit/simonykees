<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>jSparrow.license</artifactId>
  <packaging>eclipse-plugin</packaging>
  <name>jSparrow :: license</name>
  <description>jSparrow License Plugin</description>
  <parent>
  	<groupId>at.splendit.jSparrow</groupId>
  	<artifactId>jSparrow</artifactId>
  	<version>1.2.0-SNAPSHOT</version>
  	<relativePath>..</relativePath>
  </parent>
  
  
  <properties>
		<!-- source of property file for production license -->
		<configFileProduction>src/main/config-files/prod-license.properties</configFileProduction>
		<!-- source of property file for test license -->
		<configFileTest>src/main/config-files/test-license.properties</configFileTest>
		<!-- actual property file for productive license -->
		<activeConfigFileProduction>target/classes/active-prod-license.properties</activeConfigFileProduction>
		<!-- actual property file for test license -->
		<activeConfigFileTest>target/classes/active-test-license.properties</activeConfigFileTest>
		<!-- Java Class for test licenses -->
		<javaLicenseTestPropertiesClass>src/main/config-files/java-license-properties-test.txt</javaLicenseTestPropertiesClass>
		<!-- Java Class for production licenses -->
		<javaLicenseProductionPropertiesClass>src/main/config-files/java-license-properties-production.txt</javaLicenseProductionPropertiesClass>
		<!-- Target Java class -->
		<targetJavaLicenseProperties>src/main/java/at/splendit/simonykees/license/LicenseProperties.java</targetJavaLicenseProperties>				
	</properties>	
	
	<profiles>
		<!-- SIM-361 configure proguard to work with multiple modules
		<profile>
			<id>proguard</id>
			<activation>
				<property>
					<!- - With this profile active, obfuscation will happen - ->
					<name>proguard</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.wvengen</groupId>
						<artifactId>proguard-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>proguard</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<obfuscate>true</obfuscate>
							<!- - <injar>${project.build.finalName}.jar</injar> <outjar>${project.build.finalName}-small.jar</outjar> - ->
							<libs>
								<lib>${java.home}/lib/rt.jar</lib>
								<lib>${java.home}/lib/jsse.jar</lib>
							</libs>
							<options>
								<option>-keep public class * extends
									org.eclipse.ui.plugin.AbstractUIPlugin</option>
								<option>-keep public class * extends
									at.splendit.simonykees.core.handler.AbstractSimonykeesHandler</option>
								<option>-keepclassmembers public class * extends
									org.eclipse.osgi.util.NLS { public static &lt;fields&gt;; }</option>
								<option>-keep public class * implements
									org.eclipse.ui.IWorkbenchPreferencePage</option>
								<option>-keep public class * extends
									org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer</option>
								<option>-dontnote org.eclipse.**</option>
								<option>-dontnote org.osgi.**</option>
								<option>-dontnote javax.xml.**</option>
								<option>-dontnote javax.annotation.**</option>
								<option>-dontnote org.xml.sax.**</option>
								<option>-dontnote org.w3c.dom.**</option>
								<option>-dontwarn javax.crypto.**</option>
							</options>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile> 
		-->
		<profile>
			<id>test</id>
			  <activation>
				<activeByDefault>true</activeByDefault>
			</activation> 
			<build>
 				<resources> 
             		<resource>
                 		<directory>src/main/resources</directory>
             		</resource>
         		</resources> 
				<plugins>
					<plugin>
					    <groupId>com.coderplus.maven.plugins</groupId>
					    <artifactId>copy-rename-maven-plugin</artifactId>
					    <version>1.0.1</version>
					    <executions>
					     <execution>
						      <id>copy-java-file</id>
						      <phase>validate</phase>
						      <goals>
						      	<goal>copy</goal>
						      </goals>
						      <configuration>
						          <sourceFile>${javaLicenseTestPropertiesClass}</sourceFile>
						          <destinationFile>${targetJavaLicenseProperties}</destinationFile>
						          <overWrite>true</overWrite>
						        </configuration>
				      </execution>
					      <execution>
					        <id>copy-file-flag</id>
					        <phase>compile</phase>
					        <goals>
					          <goal>copy</goal>
					        </goals>
					        <configuration>
					          <sourceFile>${configFileTest}</sourceFile>
					          <destinationFile>${activeConfigFileTest}</destinationFile>
					        </configuration>
					      </execution>
					    </executions>
				  </plugin>
			  </plugins>
		  </build>
		</profile>
		<profile>
			<id>production</id>			
			<build>
				 <resources> 
             		<resource>
                 		<directory>src/main/resources</directory>
             		</resource>
         		</resources>
         	<plugins>
				<plugin>
				    <groupId>com.coderplus.maven.plugins</groupId>
				    <artifactId>copy-rename-maven-plugin</artifactId>
				    <version>1.0.1</version>
				    <executions>
				      <execution>
				      <id>copy-java-file</id>
				      <phase>validate</phase>
				      <goals>
				      	<goal>copy</goal>
				      </goals>
				      <configuration>
				          <sourceFile>${javaLicenseProductionPropertiesClass}</sourceFile>
				          <destinationFile>${targetJavaLicenseProperties}</destinationFile>
				          <overWrite>true</overWrite>
				        </configuration>
				      </execution>
				      <execution>
				        <id>copy-file-flag</id>
				        <phase>compile</phase>
				        <goals>
				          <goal>copy</goal>
				        </goals>
				        <configuration>
				          <sourceFile>${configFileProduction}</sourceFile>
				          <destinationFile>${activeConfigFileProduction}</destinationFile>
				        </configuration>
				      </execution>
				    </executions>
					</plugin>
			  </plugins>
		  </build>			
		</profile>
		
	</profiles>
  
  
</project>