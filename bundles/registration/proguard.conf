# Define a base class that is related to the module to have a unique obfuscation for the deobfuscation service
-repackageclasses 'eu.jsparrow.registration'

# one keep needs to be defined (even if all access points are possible to obfuscate)
## made up class results in waring
-keep public class this.has.to.be.There

-adaptresourcefilecontents OSGI-INF/eu.jsparrow.registration.CustomerRegistrationService.xml
-adaptresourcefilecontents OSGI-INF/eu.jsparrow.registration.RegistrationPersistenceService.xml

-dontnote org.eclipse.**
-dontnote org.osgi.**
-dontnote javax.xml.**
-dontwarn javax.crypto.**
-dontnote org.xml.sax.**
-dontnote org.w3c.dom.**

-keep class javax.inject.**    

-keep class eu.jsparrow.registration.validation.response.ActivateResponse {*; }
-keep class eu.jsparrow.registration.validation.response.RegisterResponse {*; }

-keepclassmembers class * implements java.io.Serializable {
	<fields>;
	<methods>;
	private static final java.io.ObjectStreamField[] serialPersistentFields; 
	private void writeObject(java.io.ObjectOutputStream); 
	private void readObject(java.io.ObjectInputStream); 
	java.lang.Object writeReplace(); 
	java.lang.Object readResolve();
}

 # keeps all fields and Constructors with @Inject
-keepclassmembers,allowobfuscation class * {
	@javax.inject.Inject <fields>;
	@javax.inject.Inject <init>(...);
}
