# Define a base class that is related to the module to have a unique obfuscation for the deobfuscation service
-repackageclasses 'eu.jsparrow.license.api'

# one keep needs to be definded (even if all access points are possible to obfuscate)
-keep public class this.has.to.be.There

# we don't want different representations of serialized license models in different versions. 
-keep interface eu.jsparrow.license.api.LicenseModel
# the deserialization of the enums does not work if they are obfuscated 
-keep enum *

-keepclassmembers enum * {
	<fields>;
    public static **[] values(); 
    public static ** valueOf(java.lang.String); 
} 

-keepclassmembers class * extends java.io.Serializable {
	<methods>;
	private static final java.io.ObjectStreamField[] serialPersistentFields; 
	private void writeObject(java.io.ObjectOutputStream); 
	private void readObject(java.io.ObjectInputStream); 
	java.lang.Object writeReplace(); 
	java.lang.Object readResolve();
}

# proguard complained when trying to obfuscate this field
-keepclassmembers class eu.jsparrow.license.api.LicenseValidationResult {
	private java.time.ZonedDateTime expirationDate;
}