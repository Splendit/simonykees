# Define a base class that is related to the module to have a unique obfuscation for the deobfuscation service
-repackageclasses 'eu.jsparrow.license.api'

# one keep needs to be definded (even if all access points are possible to obfuscate)
-keep public class this.has.to.be.There

-keep class * implements java.io.Serializable
-keep class * extends java.lang.Enum
-keep class eu.jsparrow.license.api.LicenseValidationResult

-keepclassmembers class * extends java.lang.Enum  {
    <fields>;
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements java.io.Serializable {
    <fields>;
    <methods>;
     private static final java.io.ObjectStreamField[] serialPersistentFields; 
     private void writeObject(java.io.ObjectOutputStream); 
     private void readObject(java.io.ObjectInputStream); 
     java.lang.Object writeReplace(); 
     java.lang.Object readResolve();
}

-keepclassmembers class eu.jsparrow.license.api.LicenseValidationResult {
    <fields>;
    <init>(eu.jsparrow.license.api.LicenseType, java.lang.String, boolean, java.lang.String, java.time.ZonedDateTime);
    <methods>;
}