(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[14],{

/***/ "./docs/.vuepress/components/OpenSourceStatistics.vue":
/*!************************************************************!*\
  !*** ./docs/.vuepress/components/OpenSourceStatistics.vue ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OpenSourceStatistics.vue?vue&type=template&id=1fb53852& */ \"./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&\");\n/* harmony import */ var _OpenSourceStatistics_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OpenSourceStatistics.vue?vue&type=script&lang=js& */ \"./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _OpenSourceStatistics_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (true) {\n  var api = __webpack_require__(/*! ./node_modules/vue-hot-reload-api/dist/index.js */ \"./node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(__webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm.js\"))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1fb53852')) {\n      api.createRecord('1fb53852', component.options)\n    } else {\n      api.reload('1fb53852', component.options)\n    }\n    module.hot.accept(/*! ./OpenSourceStatistics.vue?vue&type=template&id=1fb53852& */ \"./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OpenSourceStatistics.vue?vue&type=template&id=1fb53852& */ \"./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&\");\n(function () {\n      api.rerender('1fb53852', {\n        render: _OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n        staticRenderFns: _OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]\n      })\n    })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n  }\n}\ncomponent.options.__file = \"docs/.vuepress/components/OpenSourceStatistics.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzLy52dWVwcmVzcy9jb21wb25lbnRzL09wZW5Tb3VyY2VTdGF0aXN0aWNzLnZ1ZS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL2NvbXBvbmVudHMvT3BlblNvdXJjZVN0YXRpc3RpY3MudnVlPzEwODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWZiNTM4NTImXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vT3BlblNvdXJjZVN0YXRpc3RpY3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIi9ob21lL2FyZGl0eW1lcmkvZWNsaXBzZS13b3Jrc3BhY2UvanNwYXJyb3ctZG9jL25vZGVfbW9kdWxlcy92dWUtaG90LXJlbG9hZC1hcGkvZGlzdC9pbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzFmYjUzODUyJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzFmYjUzODUyJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzFmYjUzODUyJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWZiNTM4NTImXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignMWZiNTM4NTInLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcImRvY3MvLnZ1ZXByZXNzL2NvbXBvbmVudHMvT3BlblNvdXJjZVN0YXRpc3RpY3MudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./docs/.vuepress/components/OpenSourceStatistics.vue\n");

/***/ }),

/***/ "./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js&":
/*!*************************************************************************************!*\
  !*** ./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_ref_3_0_node_modules_babel_loader_lib_index_js_ref_3_1_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OpenSourceStatistics_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../node_modules/babel-loader/lib??ref--3-1!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib??vue-loader-options!./OpenSourceStatistics.vue?vue&type=script&lang=js& */ \"./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_cache_loader_dist_cjs_js_ref_3_0_node_modules_babel_loader_lib_index_js_ref_3_1_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OpenSourceStatistics_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzLy52dWVwcmVzcy9jb21wb25lbnRzL09wZW5Tb3VyY2VTdGF0aXN0aWNzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzLy52dWVwcmVzcy9jb21wb25lbnRzL09wZW5Tb3VyY2VTdGF0aXN0aWNzLnZ1ZT8yMTQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vT3BlblNvdXJjZVN0YXRpc3RpY3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMy0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTMtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL09wZW5Tb3VyY2VTdGF0aXN0aWNzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&":
/*!*******************************************************************************************!*\
  !*** ./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852& ***!
  \*******************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_b0624b54_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"b0624b54-vue-loader-template\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib??vue-loader-options!./OpenSourceStatistics.vue?vue&type=template&id=1fb53852& */ \"./node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"b0624b54-vue-loader-template\\\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_b0624b54_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_b0624b54_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OpenSourceStatistics_vue_vue_type_template_id_1fb53852___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kb2NzLy52dWVwcmVzcy9jb21wb25lbnRzL09wZW5Tb3VyY2VTdGF0aXN0aWNzLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xZmI1Mzg1MiYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzLy52dWVwcmVzcy9jb21wb25lbnRzL09wZW5Tb3VyY2VTdGF0aXN0aWNzLnZ1ZT9mNjA5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6XFxcIm5vZGVfbW9kdWxlcy9AdnVlcHJlc3MvY29yZS9ub2RlX21vZHVsZXMvLmNhY2hlL3Z1ZXByZXNzXFxcIixcXFwiY2FjaGVJZGVudGlmaWVyXFxcIjpcXFwiYjA2MjRiNTQtdnVlLWxvYWRlci10ZW1wbGF0ZVxcXCJ9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWZiNTM4NTImXCIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&\n");

/***/ }),

/***/ "./docs/.vuepress/statistics.js":
/*!**************************************!*\
  !*** ./docs/.vuepress/statistics.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = [{\n  projectName: \"rocketmq\",\n  timestampGitHubStart: 1542967018,\n  timestampJSparrowFinish: 1542967507,\n  totalFilesChanged: 652,\n  totalFilesCount: 654,\n  totalIssuesFixed: 2785,\n  totalTimeSaved: 11028,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 62,\n    issuesFixedCount: 114\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 10,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 21\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 11,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 78,\n    issuesFixedCount: 463\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 12,\n    issuesFixedCount: 15\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 68,\n    issuesFixedCount: 204\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 118,\n    issuesFixedCount: 417\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 35\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 27,\n    issuesFixedCount: 31\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 52,\n    issuesFixedCount: 198\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 652,\n    issuesFixedCount: 652\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 139,\n    issuesFixedCount: 373\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 74,\n    issuesFixedCount: 169\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }]\n}, {\n  projectName: \"spring-cloud-gateway\",\n  timestampGitHubStart: 1543311704,\n  timestampJSparrowFinish: 1543312283,\n  totalFilesChanged: 113,\n  totalFilesCount: 140,\n  totalIssuesFixed: 249,\n  totalTimeSaved: 858,\n  rules: [{\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 8,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 12,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 12,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 111,\n    issuesFixedCount: 111\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 23,\n    issuesFixedCount: 38\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"enmasse\",\n  timestampGitHubStart: 1542966641,\n  timestampJSparrowFinish: 1542967046,\n  totalFilesChanged: 190,\n  totalFilesCount: 423,\n  totalIssuesFixed: 455,\n  totalTimeSaved: 1773,\n  rules: [{\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 11,\n    issuesFixedCount: 41\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 190,\n    issuesFixedCount: 190\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 32,\n    issuesFixedCount: 70\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 25,\n    issuesFixedCount: 44\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }]\n}, {\n  projectName: \"philadelphia\",\n  timestampGitHubStart: 1542378016,\n  timestampJSparrowFinish: 1542378380,\n  totalFilesChanged: 66,\n  totalFilesCount: 75,\n  totalIssuesFixed: 171,\n  totalTimeSaved: 337,\n  rules: [{\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 66,\n    issuesFixedCount: 66\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 20,\n    issuesFixedCount: 78\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"proxyee-down\",\n  timestampGitHubStart: 1542810200,\n  timestampJSparrowFinish: 1542810426,\n  totalFilesChanged: 11,\n  totalFilesCount: 42,\n  totalIssuesFixed: 28,\n  totalTimeSaved: 148,\n  rules: [{\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 11,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"canal\",\n  timestampGitHubStart: 1542969800,\n  timestampJSparrowFinish: 1542971109,\n  totalFilesChanged: 386,\n  totalFilesCount: 389,\n  totalIssuesFixed: 4006,\n  totalTimeSaved: 26038,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 47,\n    issuesFixedCount: 174\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 9,\n    issuesFixedCount: 17\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 33,\n    issuesFixedCount: 249\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 52,\n    issuesFixedCount: 252\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 4,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 51,\n    issuesFixedCount: 123\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 21,\n    issuesFixedCount: 49\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 11,\n    issuesFixedCount: 956\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 17,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 64,\n    issuesFixedCount: 104\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 43\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 131,\n    issuesFixedCount: 1027\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 386,\n    issuesFixedCount: 386\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 105,\n    issuesFixedCount: 337\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 57,\n    issuesFixedCount: 131\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 10\n  }]\n}, {\n  projectName: \"kapua\",\n  timestampGitHubStart: 1542382512,\n  timestampJSparrowFinish: 1542383426,\n  totalFilesChanged: 1018,\n  totalFilesCount: 1503,\n  totalIssuesFixed: 1741,\n  totalTimeSaved: 4794,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 17,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 3,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 14,\n    issuesFixedCount: 47\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 57,\n    issuesFixedCount: 57\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 31,\n    issuesFixedCount: 84\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 20,\n    issuesFixedCount: 35\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 18,\n    issuesFixedCount: 26\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 20,\n    issuesFixedCount: 39\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 8,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 95,\n    issuesFixedCount: 96\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 15,\n    issuesFixedCount: 33\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 42,\n    issuesFixedCount: 153\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 1018,\n    issuesFixedCount: 1018\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 18,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 13,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 20,\n    issuesFixedCount: 32\n  }, {\n    ruleId: \"StringBuildingLoop\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }]\n}, {\n  projectName: \"jsprit\",\n  timestampGitHubStart: 1542375972,\n  timestampJSparrowFinish: 1542376402,\n  totalFilesChanged: 346,\n  totalFilesCount: 355,\n  totalIssuesFixed: 2314,\n  totalTimeSaved: 8222,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 32,\n    issuesFixedCount: 118\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 24,\n    issuesFixedCount: 34\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 8,\n    issuesFixedCount: 161\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 12,\n    issuesFixedCount: 61\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 89,\n    issuesFixedCount: 108\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 21,\n    issuesFixedCount: 72\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 26,\n    issuesFixedCount: 53\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 136,\n    issuesFixedCount: 797\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 346,\n    issuesFixedCount: 346\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 73,\n    issuesFixedCount: 248\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 95,\n    issuesFixedCount: 119\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 69,\n    issuesFixedCount: 156\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 21\n  }]\n}, {\n  projectName: \"Activiti\",\n  timestampGitHubStart: 1542964766,\n  timestampJSparrowFinish: 1542965638,\n  totalFilesChanged: 1516,\n  totalFilesCount: 1527,\n  totalIssuesFixed: 7409,\n  totalTimeSaved: 33051,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 132,\n    issuesFixedCount: 230\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 23,\n    issuesFixedCount: 75\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 23,\n    issuesFixedCount: 31\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 31\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 33,\n    issuesFixedCount: 59\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 15,\n    issuesFixedCount: 115\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 237,\n    issuesFixedCount: 585\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 35,\n    issuesFixedCount: 103\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 11,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 198,\n    issuesFixedCount: 388\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 21,\n    issuesFixedCount: 46\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 25,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 605,\n    issuesFixedCount: 2737\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 1516,\n    issuesFixedCount: 1516\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 221,\n    issuesFixedCount: 453\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 49,\n    issuesFixedCount: 73\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 14,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 243,\n    issuesFixedCount: 675\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 69,\n    issuesFixedCount: 105\n  }]\n}, {\n  projectName: \"lance\",\n  timestampGitHubStart: 1542381959,\n  timestampJSparrowFinish: 1542382393,\n  totalFilesChanged: 216,\n  totalFilesCount: 219,\n  totalIssuesFixed: 724,\n  totalTimeSaved: 2504,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 53,\n    issuesFixedCount: 153\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 11,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 18,\n    issuesFixedCount: 30\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 16,\n    issuesFixedCount: 26\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 15,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 42,\n    issuesFixedCount: 44\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 211,\n    issuesFixedCount: 211\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 54,\n    issuesFixedCount: 108\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }]\n}, {\n  projectName: \"openmrs-core\",\n  timestampGitHubStart: 1542379123,\n  timestampJSparrowFinish: 1542380374,\n  totalFilesChanged: 726,\n  totalFilesCount: 728,\n  totalIssuesFixed: 4477,\n  totalTimeSaved: 18779,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 82,\n    issuesFixedCount: 117\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 14,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 11,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 13,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 152,\n    issuesFixedCount: 1650\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 19,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 75,\n    issuesFixedCount: 375\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 69,\n    issuesFixedCount: 159\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 102,\n    issuesFixedCount: 299\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 15,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 88,\n    issuesFixedCount: 185\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 76,\n    issuesFixedCount: 81\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 726,\n    issuesFixedCount: 726\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 153,\n    issuesFixedCount: 502\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 37,\n    issuesFixedCount: 38\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 37,\n    issuesFixedCount: 58\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 11,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 7,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 46,\n    issuesFixedCount: 83\n  }]\n}, {\n  projectName: \"orson-charts\",\n  timestampGitHubStart: 1542378632,\n  timestampJSparrowFinish: 1542378955,\n  totalFilesChanged: 245,\n  totalFilesCount: 251,\n  totalIssuesFixed: 552,\n  totalTimeSaved: 1248,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 23,\n    issuesFixedCount: 46\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 32\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 11,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 18,\n    issuesFixedCount: 76\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 245,\n    issuesFixedCount: 245\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 19,\n    issuesFixedCount: 45\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 23,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }]\n}, {\n  projectName: \"spring-cloud-config\",\n  timestampGitHubStart: 1542963607,\n  timestampJSparrowFinish: 1542964107,\n  totalFilesChanged: 105,\n  totalFilesCount: 130,\n  totalIssuesFixed: 305,\n  totalTimeSaved: 1248,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 8,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 17\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 23,\n    issuesFixedCount: 30\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 12,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 4,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 11,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 104,\n    issuesFixedCount: 104\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 24,\n    issuesFixedCount: 52\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 8,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }]\n}, {\n  projectName: \"ratel\",\n  timestampGitHubStart: 1542379714,\n  timestampJSparrowFinish: 1542379962,\n  totalFilesChanged: 90,\n  totalFilesCount: 92,\n  totalIssuesFixed: 347,\n  totalTimeSaved: 2126,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 10,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 66\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 7,\n    issuesFixedCount: 15\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 90,\n    issuesFixedCount: 90\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 23,\n    issuesFixedCount: 34\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 3,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }]\n}, {\n  projectName: \"jfreechart-fse\",\n  timestampGitHubStart: 1542380966,\n  timestampJSparrowFinish: 1542381532,\n  totalFilesChanged: 690,\n  totalFilesCount: 732,\n  totalIssuesFixed: 2736,\n  totalTimeSaved: 9007,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 117,\n    issuesFixedCount: 241\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 13,\n    issuesFixedCount: 32\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 24,\n    issuesFixedCount: 56\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 9,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 26,\n    issuesFixedCount: 44\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 85,\n    issuesFixedCount: 85\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 47,\n    issuesFixedCount: 165\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 30,\n    issuesFixedCount: 113\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 47,\n    issuesFixedCount: 138\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 49,\n    issuesFixedCount: 49\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 39,\n    issuesFixedCount: 137\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 25,\n    issuesFixedCount: 39\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 690,\n    issuesFixedCount: 690\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 58,\n    issuesFixedCount: 90\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 162,\n    issuesFixedCount: 305\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 47\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 115,\n    issuesFixedCount: 365\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 11,\n    issuesFixedCount: 63\n  }]\n}, {\n  projectName: \"egeria\",\n  timestampGitHubStart: 1543237653,\n  timestampJSparrowFinish: 1543238060,\n  totalFilesChanged: 336,\n  totalFilesCount: 1244,\n  totalIssuesFixed: 725,\n  totalTimeSaved: 1962,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 8,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 6,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 27,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 26,\n    issuesFixedCount: 116\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 336,\n    issuesFixedCount: 336\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 102,\n    issuesFixedCount: 153\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 13,\n    issuesFixedCount: 15\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }]\n}, {\n  projectName: \"primefaces\",\n  timestampGitHubStart: 1542383464,\n  timestampJSparrowFinish: 1542384186,\n  totalFilesChanged: 1036,\n  totalFilesCount: 1049,\n  totalIssuesFixed: 2757,\n  totalTimeSaved: 9581,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 18,\n    issuesFixedCount: 57\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 121,\n    issuesFixedCount: 171\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 53\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 103,\n    issuesFixedCount: 332\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 37,\n    issuesFixedCount: 73\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 175,\n    issuesFixedCount: 175\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 1036,\n    issuesFixedCount: 1036\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 59,\n    issuesFixedCount: 153\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 209,\n    issuesFixedCount: 608\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 13,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 16,\n    issuesFixedCount: 21\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }]\n}, {\n  projectName: \"BroadleafCommerce\",\n  timestampGitHubStart: 1542381392,\n  timestampJSparrowFinish: 1542382975,\n  totalFilesChanged: 2648,\n  totalFilesCount: 2652,\n  totalIssuesFixed: 8449,\n  totalTimeSaved: 29247,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 202,\n    issuesFixedCount: 267\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 44,\n    issuesFixedCount: 120\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 15,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 17\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 178,\n    issuesFixedCount: 1127\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 110,\n    issuesFixedCount: 177\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 56,\n    issuesFixedCount: 56\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 183,\n    issuesFixedCount: 719\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 29,\n    issuesFixedCount: 38\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 131,\n    issuesFixedCount: 238\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 29,\n    issuesFixedCount: 271\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 215,\n    issuesFixedCount: 217\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 46,\n    issuesFixedCount: 111\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 258,\n    issuesFixedCount: 690\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 2648,\n    issuesFixedCount: 2648\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 282,\n    issuesFixedCount: 723\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 17,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 412,\n    issuesFixedCount: 906\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 7\n  }]\n}, {\n  projectName: \"arthas\",\n  timestampGitHubStart: 1542812873,\n  timestampJSparrowFinish: 1542813369,\n  totalFilesChanged: 235,\n  totalFilesCount: 235,\n  totalIssuesFixed: 841,\n  totalTimeSaved: 5274,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 16,\n    issuesFixedCount: 30\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 28,\n    issuesFixedCount: 60\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 11,\n    issuesFixedCount: 213\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 6,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 27,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 14,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 235,\n    issuesFixedCount: 235\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 55,\n    issuesFixedCount: 126\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 40\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 5\n  }]\n}, {\n  projectName: \"moshi\",\n  timestampGitHubStart: 1542886134,\n  timestampJSparrowFinish: 1542886705,\n  totalFilesChanged: 51,\n  totalFilesCount: 55,\n  totalIssuesFixed: 278,\n  totalTimeSaved: 627,\n  rules: [{\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 19,\n    issuesFixedCount: 107\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 51,\n    issuesFixedCount: 51\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 28,\n    issuesFixedCount: 85\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 8\n  }]\n}, {\n  projectName: \"platform\",\n  timestampGitHubStart: 1542974216,\n  timestampJSparrowFinish: 1542974733,\n  totalFilesChanged: 255,\n  totalFilesCount: 382,\n  totalIssuesFixed: 313,\n  totalTimeSaved: 660,\n  rules: [{\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 255,\n    issuesFixedCount: 255\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 8,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 12,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 8\n  }]\n}, {\n  projectName: \"metatron-discovery\",\n  timestampGitHubStart: 1542379275,\n  timestampJSparrowFinish: 1542380668,\n  totalFilesChanged: 254,\n  totalFilesCount: 1224,\n  totalIssuesFixed: 386,\n  totalTimeSaved: 639,\n  rules: [{\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 11,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 254,\n    issuesFixedCount: 254\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 42,\n    issuesFixedCount: 59\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }]\n}, {\n  projectName: \"brave\",\n  timestampGitHubStart: 1542972732,\n  timestampJSparrowFinish: 1542973580,\n  totalFilesChanged: 234,\n  totalFilesCount: 239,\n  totalIssuesFixed: 958,\n  totalTimeSaved: 2382,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 17,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 28,\n    issuesFixedCount: 39\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 98,\n    issuesFixedCount: 107\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 124,\n    issuesFixedCount: 466\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 234,\n    issuesFixedCount: 234\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 40,\n    issuesFixedCount: 42\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }]\n}, {\n  projectName: \"Amy\",\n  timestampGitHubStart: 1542379505,\n  timestampJSparrowFinish: 1542380000,\n  totalFilesChanged: 353,\n  totalFilesCount: 411,\n  totalIssuesFixed: 1027,\n  totalTimeSaved: 4094,\n  rules: [{\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 36,\n    issuesFixedCount: 63\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 36,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 15,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 29,\n    issuesFixedCount: 37\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 13,\n    issuesFixedCount: 36\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 36,\n    issuesFixedCount: 36\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 33\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 59,\n    issuesFixedCount: 148\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 343,\n    issuesFixedCount: 343\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 58,\n    issuesFixedCount: 133\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 29,\n    issuesFixedCount: 59\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }]\n}, {\n  projectName: \"spring-cloud-sleuth\",\n  timestampGitHubStart: 1542972717,\n  timestampJSparrowFinish: 1542973391,\n  totalFilesChanged: 123,\n  totalFilesCount: 156,\n  totalIssuesFixed: 263,\n  totalTimeSaved: 691,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 7,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 6,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 118,\n    issuesFixedCount: 118\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 31,\n    issuesFixedCount: 48\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }]\n}, {\n  projectName: \"flowable-engine\",\n  timestampGitHubStart: 1543325872,\n  timestampJSparrowFinish: 1543326999,\n  totalFilesChanged: 2736,\n  totalFilesCount: 2755,\n  totalIssuesFixed: 6047,\n  totalTimeSaved: 25895,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 224,\n    issuesFixedCount: 436\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 7,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 17\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 20,\n    issuesFixedCount: 61\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 29,\n    issuesFixedCount: 40\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 54,\n    issuesFixedCount: 95\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 22,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 15,\n    issuesFixedCount: 15\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"OptionalIfPresent\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 50,\n    issuesFixedCount: 112\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 329,\n    issuesFixedCount: 814\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 14,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 268,\n    issuesFixedCount: 514\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 41,\n    issuesFixedCount: 84\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 56,\n    issuesFixedCount: 56\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 24,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 2735,\n    issuesFixedCount: 2735\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 334,\n    issuesFixedCount: 600\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 79,\n    issuesFixedCount: 108\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 3,\n    issuesFixedCount: 15\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 93,\n    issuesFixedCount: 132\n  }]\n}, {\n  projectName: \"takes\",\n  timestampGitHubStart: 1542970675,\n  timestampJSparrowFinish: 1542971120,\n  totalFilesChanged: 60,\n  totalFilesCount: 260,\n  totalIssuesFixed: 76,\n  totalTimeSaved: 92,\n  rules: [{\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 60,\n    issuesFixedCount: 60\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 5,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"morpheus-core\",\n  timestampGitHubStart: 1542378214,\n  timestampJSparrowFinish: 1542378758,\n  totalFilesChanged: 282,\n  totalFilesCount: 293,\n  totalIssuesFixed: 1400,\n  totalTimeSaved: 6898,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 4,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 11,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 49,\n    issuesFixedCount: 122\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 22,\n    issuesFixedCount: 110\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 30,\n    issuesFixedCount: 30\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 7,\n    issuesFixedCount: 237\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 26,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 70,\n    issuesFixedCount: 312\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 282,\n    issuesFixedCount: 282\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 40,\n    issuesFixedCount: 167\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"symphony\",\n  timestampGitHubStart: 1542380952,\n  timestampJSparrowFinish: 1542382380,\n  totalFilesChanged: 223,\n  totalFilesCount: 223,\n  totalIssuesFixed: 1047,\n  totalTimeSaved: 4487,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 27,\n    issuesFixedCount: 45\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 7,\n    issuesFixedCount: 124\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 22,\n    issuesFixedCount: 34\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 25,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 223,\n    issuesFixedCount: 223\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 104,\n    issuesFixedCount: 503\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 8\n  }]\n}, {\n  projectName: \"incubator-dubbo\",\n  timestampGitHubStart: 1542381474,\n  timestampJSparrowFinish: 1542382752,\n  totalFilesChanged: 738,\n  totalFilesCount: 769,\n  totalIssuesFixed: 3003,\n  totalTimeSaved: 9898,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 46,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 9,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 54,\n    issuesFixedCount: 179\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 8,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 10,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 19,\n    issuesFixedCount: 47\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 108,\n    issuesFixedCount: 182\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 11,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 69,\n    issuesFixedCount: 173\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 16,\n    issuesFixedCount: 47\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 13,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 48,\n    issuesFixedCount: 94\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 33,\n    issuesFixedCount: 71\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 22,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 738,\n    issuesFixedCount: 738\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 173,\n    issuesFixedCount: 634\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 32,\n    issuesFixedCount: 52\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 165,\n    issuesFixedCount: 432\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 20,\n    issuesFixedCount: 38\n  }]\n}, {\n  projectName: \"HealthPlus\",\n  timestampGitHubStart: 1542378514,\n  timestampJSparrowFinish: 1542378738,\n  totalFilesChanged: 10,\n  totalFilesCount: 55,\n  totalIssuesFixed: 411,\n  totalTimeSaved: 862,\n  rules: [{\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 45\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 272\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 4,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 8,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 5\n  }]\n}, {\n  projectName: \"presto\",\n  timestampGitHubStart: 1543311420,\n  timestampJSparrowFinish: 1543313487,\n  totalFilesChanged: 2716,\n  totalFilesCount: 3578,\n  totalIssuesFixed: 6164,\n  totalTimeSaved: 27267,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 144,\n    issuesFixedCount: 193\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 20,\n    issuesFixedCount: 37\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 40,\n    issuesFixedCount: 54\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 17,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 106,\n    issuesFixedCount: 299\n  }, {\n    ruleId: \"OptionalIfPresent\",\n    remediationCost: 2,\n    fileCount: 39,\n    issuesFixedCount: 120\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 73,\n    issuesFixedCount: 179\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 298,\n    issuesFixedCount: 734\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 231,\n    issuesFixedCount: 468\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 317,\n    issuesFixedCount: 329\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 30,\n    issuesFixedCount: 42\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 2716,\n    issuesFixedCount: 2716\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 154,\n    issuesFixedCount: 745\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 67,\n    issuesFixedCount: 115\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 33,\n    issuesFixedCount: 45\n  }]\n}, {\n  projectName: \"stringtemplate4\",\n  timestampGitHubStart: 1542381105,\n  timestampJSparrowFinish: 1542381317,\n  totalFilesChanged: 50,\n  totalFilesCount: 59,\n  totalIssuesFixed: 218,\n  totalTimeSaved: 511,\n  rules: [{\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 21,\n    issuesFixedCount: 90\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 49,\n    issuesFixedCount: 49\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 41\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 12\n  }]\n}, {\n  projectName: \"killbill\",\n  timestampGitHubStart: 1542376462,\n  timestampJSparrowFinish: 1542377693,\n  totalFilesChanged: 842,\n  totalFilesCount: 981,\n  totalIssuesFixed: 2494,\n  totalTimeSaved: 8222,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 32,\n    issuesFixedCount: 54\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 9,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 27,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 30,\n    issuesFixedCount: 39\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 63,\n    issuesFixedCount: 135\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 41,\n    issuesFixedCount: 61\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 64,\n    issuesFixedCount: 152\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 66,\n    issuesFixedCount: 274\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 52,\n    issuesFixedCount: 54\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 41,\n    issuesFixedCount: 135\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 35,\n    issuesFixedCount: 59\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 842,\n    issuesFixedCount: 842\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 53,\n    issuesFixedCount: 88\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 21,\n    issuesFixedCount: 42\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 15,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 131,\n    issuesFixedCount: 411\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 15\n  }]\n}, {\n  projectName: \"spring-boot\",\n  timestampGitHubStart: 1542382276,\n  timestampJSparrowFinish: 1542382893,\n  totalFilesChanged: 275,\n  totalFilesCount: 2306,\n  totalIssuesFixed: 481,\n  totalTimeSaved: 1403,\n  rules: [{\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 17,\n    issuesFixedCount: 36\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 15,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 5,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 275,\n    issuesFixedCount: 275\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 37,\n    issuesFixedCount: 76\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }]\n}, {\n  projectName: \"marytts\",\n  timestampGitHubStart: 1542378150,\n  timestampJSparrowFinish: 1542378629,\n  totalFilesChanged: 407,\n  totalFilesCount: 903,\n  totalIssuesFixed: 4317,\n  totalTimeSaved: 14556,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 26,\n    issuesFixedCount: 41\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 17,\n    issuesFixedCount: 265\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 33,\n    issuesFixedCount: 104\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 93\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 67,\n    issuesFixedCount: 111\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 53,\n    issuesFixedCount: 127\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 61,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 161,\n    issuesFixedCount: 439\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 221,\n    issuesFixedCount: 2074\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 369,\n    issuesFixedCount: 369\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 13,\n    issuesFixedCount: 35\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 136,\n    issuesFixedCount: 389\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 41,\n    issuesFixedCount: 45\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 37,\n    issuesFixedCount: 92\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 12,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }]\n}, {\n  projectName: \"iextrading4j\",\n  timestampGitHubStart: 1542377261,\n  timestampJSparrowFinish: 1542377601,\n  totalFilesChanged: 261,\n  totalFilesCount: 263,\n  totalIssuesFixed: 482,\n  totalTimeSaved: 1482,\n  rules: [{\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 70,\n    issuesFixedCount: 147\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 261,\n    issuesFixedCount: 261\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 6,\n    issuesFixedCount: 57\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"tablesaw\",\n  timestampGitHubStart: 1542378717,\n  timestampJSparrowFinish: 1542379232,\n  totalFilesChanged: 200,\n  totalFilesCount: 200,\n  totalIssuesFixed: 930,\n  totalTimeSaved: 4495,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 46,\n    issuesFixedCount: 50\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 32,\n    issuesFixedCount: 104\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 30,\n    issuesFixedCount: 81\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 22,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 46,\n    issuesFixedCount: 122\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 17,\n    issuesFixedCount: 95\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 200,\n    issuesFixedCount: 200\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 40,\n    issuesFixedCount: 130\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 23,\n    issuesFixedCount: 43\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 10,\n    issuesFixedCount: 30\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}, {\n  projectName: \"game-server\",\n  timestampGitHubStart: 1542376001,\n  timestampJSparrowFinish: 1542376794,\n  totalFilesChanged: 378,\n  totalFilesCount: 381,\n  totalIssuesFixed: 6264,\n  totalTimeSaved: 49855,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 45,\n    issuesFixedCount: 134\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 21,\n    issuesFixedCount: 70\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 45,\n    issuesFixedCount: 435\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 13,\n    issuesFixedCount: 15\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 20,\n    issuesFixedCount: 63\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 19,\n    issuesFixedCount: 41\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 18,\n    issuesFixedCount: 2165\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 31,\n    issuesFixedCount: 52\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 21,\n    issuesFixedCount: 42\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 44,\n    issuesFixedCount: 176\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 44,\n    issuesFixedCount: 2375\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 377,\n    issuesFixedCount: 377\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 63,\n    issuesFixedCount: 118\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 18,\n    issuesFixedCount: 33\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 28,\n    issuesFixedCount: 113\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }]\n}, {\n  projectName: \"soot\",\n  timestampGitHubStart: 1542969901,\n  timestampJSparrowFinish: 1542971125,\n  totalFilesChanged: 1761,\n  totalFilesCount: 2144,\n  totalIssuesFixed: 13733,\n  totalTimeSaved: 79281,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 162,\n    issuesFixedCount: 235\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 8,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 77,\n    issuesFixedCount: 310\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 48,\n    issuesFixedCount: 219\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 72,\n    issuesFixedCount: 118\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 42,\n    issuesFixedCount: 88\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 85,\n    issuesFixedCount: 185\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 15,\n    issuesFixedCount: 33\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 13,\n    issuesFixedCount: 21\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 35,\n    issuesFixedCount: 37\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 96,\n    issuesFixedCount: 208\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 7,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 106,\n    issuesFixedCount: 649\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 218,\n    issuesFixedCount: 594\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 134,\n    issuesFixedCount: 1614\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 142,\n    issuesFixedCount: 296\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 246,\n    issuesFixedCount: 248\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 931,\n    issuesFixedCount: 4218\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 1761,\n    issuesFixedCount: 1761\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 370,\n    issuesFixedCount: 834\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 107,\n    issuesFixedCount: 124\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 83,\n    issuesFixedCount: 148\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 404,\n    issuesFixedCount: 1516\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 14,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 14\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 53,\n    issuesFixedCount: 87\n  }]\n}, {\n  projectName: \"JCSprout\",\n  timestampGitHubStart: 1542379316,\n  timestampJSparrowFinish: 1542379557,\n  totalFilesChanged: 74,\n  totalFilesCount: 74,\n  totalIssuesFixed: 228,\n  totalTimeSaved: 1291,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 29,\n    issuesFixedCount: 79\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 74,\n    issuesFixedCount: 74\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"EnhancedForLoopToStreamSum\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }]\n}, {\n  projectName: \"lettuce-core\",\n  timestampGitHubStart: 1542971027,\n  timestampJSparrowFinish: 1542971757,\n  totalFilesChanged: 584,\n  totalFilesCount: 619,\n  totalIssuesFixed: 1422,\n  totalTimeSaved: 5671,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 54,\n    issuesFixedCount: 76\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 14,\n    issuesFixedCount: 46\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 19,\n    issuesFixedCount: 59\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 22,\n    issuesFixedCount: 34\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 51,\n    issuesFixedCount: 85\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 6,\n    issuesFixedCount: 32\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 45,\n    issuesFixedCount: 65\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 51,\n    issuesFixedCount: 52\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 57,\n    issuesFixedCount: 180\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 584,\n    issuesFixedCount: 584\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 28,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 18,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 31,\n    issuesFixedCount: 58\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }]\n}, {\n  projectName: \"biojava\",\n  timestampGitHubStart: 1542376566,\n  timestampJSparrowFinish: 1542377716,\n  totalFilesChanged: 1082,\n  totalFilesCount: 1117,\n  totalIssuesFixed: 11865,\n  totalTimeSaved: 62491,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 89,\n    issuesFixedCount: 129\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 10,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 20,\n    issuesFixedCount: 37\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 111,\n    issuesFixedCount: 604\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 19,\n    issuesFixedCount: 133\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 37,\n    issuesFixedCount: 47\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 38,\n    issuesFixedCount: 64\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 78,\n    issuesFixedCount: 205\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 9,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 387,\n    issuesFixedCount: 2804\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 28,\n    issuesFixedCount: 82\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 69,\n    issuesFixedCount: 71\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 26,\n    issuesFixedCount: 32\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 226,\n    issuesFixedCount: 982\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 195,\n    issuesFixedCount: 563\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 44,\n    issuesFixedCount: 1318\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 18,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 150,\n    issuesFixedCount: 353\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 30,\n    issuesFixedCount: 74\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 28,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 208,\n    issuesFixedCount: 215\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 22,\n    issuesFixedCount: 53\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 1075,\n    issuesFixedCount: 1075\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 15,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 349,\n    issuesFixedCount: 1103\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 42,\n    issuesFixedCount: 60\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 72,\n    issuesFixedCount: 126\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 18\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 381,\n    issuesFixedCount: 1412\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 8,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"EnhancedForLoopToStreamSum\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"StringBuildingLoop\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 21\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 30,\n    issuesFixedCount: 55\n  }]\n}, {\n  projectName: \"orientdb\",\n  timestampGitHubStart: 1542976407,\n  timestampJSparrowFinish: 1542979001,\n  totalFilesChanged: 2525,\n  totalFilesCount: 2545,\n  totalIssuesFixed: 34917,\n  totalTimeSaved: 149344,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 336,\n    issuesFixedCount: 542\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 7,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 58,\n    issuesFixedCount: 100\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 166,\n    issuesFixedCount: 533\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 16,\n    issuesFixedCount: 73\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 47,\n    issuesFixedCount: 71\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 38,\n    issuesFixedCount: 47\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 11,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 10,\n    issuesFixedCount: 284\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 1106,\n    issuesFixedCount: 16047\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 222,\n    issuesFixedCount: 461\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 32,\n    issuesFixedCount: 34\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 30,\n    issuesFixedCount: 149\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 345,\n    issuesFixedCount: 1054\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 24,\n    issuesFixedCount: 3687\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 22,\n    issuesFixedCount: 39\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 278,\n    issuesFixedCount: 695\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 8,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 56,\n    issuesFixedCount: 115\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 236,\n    issuesFixedCount: 237\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 28,\n    issuesFixedCount: 128\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 732,\n    issuesFixedCount: 3618\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 2523,\n    issuesFixedCount: 2523\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 9,\n    issuesFixedCount: 25\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 615,\n    issuesFixedCount: 2171\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 20,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 204,\n    issuesFixedCount: 401\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 24,\n    issuesFixedCount: 45\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 483,\n    issuesFixedCount: 1580\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 17\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 66,\n    issuesFixedCount: 134\n  }]\n}, {\n  projectName: \"openhab2-addons\",\n  timestampGitHubStart: 1542975161,\n  timestampJSparrowFinish: 1542977634,\n  totalFilesChanged: 2660,\n  totalFilesCount: 2671,\n  totalIssuesFixed: 8144,\n  totalTimeSaved: 37942,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 405,\n    issuesFixedCount: 641\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 17,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 80,\n    issuesFixedCount: 533\n  }, {\n    ruleId: \"RemoveToStringOnString\",\n    remediationCost: 2,\n    fileCount: 9,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"PutIfAbsent\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 30,\n    issuesFixedCount: 38\n  }, {\n    ruleId: \"InefficientConstructor\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 18,\n    issuesFixedCount: 20\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 20,\n    issuesFixedCount: 26\n  }, {\n    ruleId: \"FlatMapInsteadOfNestedLoops\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 101,\n    issuesFixedCount: 128\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 35,\n    issuesFixedCount: 38\n  }, {\n    ruleId: \"WhileToForEach\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 2,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 19,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"OptionalIfPresent\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StringConcatToPlus\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 282,\n    issuesFixedCount: 618\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 225,\n    issuesFixedCount: 441\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 25,\n    issuesFixedCount: 39\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 27,\n    issuesFixedCount: 286\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 193,\n    issuesFixedCount: 386\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 36,\n    issuesFixedCount: 64\n  }, {\n    ruleId: \"RemoveNewStringConstructor\",\n    remediationCost: 5,\n    fileCount: 6,\n    issuesFixedCount: 11\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 453,\n    issuesFixedCount: 456\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 60,\n    issuesFixedCount: 127\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 9,\n    issuesFixedCount: 21\n  }, {\n    ruleId: \"DateDeprecated\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 2660,\n    issuesFixedCount: 2660\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 443,\n    issuesFixedCount: 942\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 4,\n    issuesFixedCount: 24\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 124,\n    issuesFixedCount: 189\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 16\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 5,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 7,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 107,\n    issuesFixedCount: 175\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StringBuildingLoop\",\n    remediationCost: 10,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 26\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 38,\n    issuesFixedCount: 48\n  }]\n}, {\n  projectName: \"citrus\",\n  timestampGitHubStart: 1542379811,\n  timestampJSparrowFinish: 1542380629,\n  totalFilesChanged: 191,\n  totalFilesCount: 1020,\n  totalIssuesFixed: 351,\n  totalTimeSaved: 740,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 4,\n    issuesFixedCount: 5\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 3,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"ArithmethicAssignment\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 23,\n    issuesFixedCount: 33\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 191,\n    issuesFixedCount: 191\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 28,\n    issuesFixedCount: 40\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 21,\n    issuesFixedCount: 21\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 17,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 8,\n    issuesFixedCount: 9\n  }]\n}, {\n  projectName: \"HL7Receiver\",\n  timestampGitHubStart: 1542378461,\n  timestampJSparrowFinish: 1542378872,\n  totalFilesChanged: 161,\n  totalFilesCount: 161,\n  totalIssuesFixed: 1094,\n  totalTimeSaved: 3697,\n  rules: [{\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 14,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 7,\n    issuesFixedCount: 19\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 13\n  }, {\n    ruleId: \"LambdaForEachCollect\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 2,\n    issuesFixedCount: 12\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 26\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 13,\n    issuesFixedCount: 50\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 72,\n    issuesFixedCount: 501\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 161,\n    issuesFixedCount: 161\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 42,\n    issuesFixedCount: 106\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 48\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 9,\n    issuesFixedCount: 9\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 30,\n    issuesFixedCount: 71\n  }, {\n    ruleId: \"TryWithResource\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"IndexOfToContains\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 7,\n    issuesFixedCount: 8\n  }]\n}, {\n  projectName: \"getting-started-java\",\n  timestampGitHubStart: 1543325218,\n  timestampJSparrowFinish: 1543325820,\n  totalFilesChanged: 153,\n  totalFilesCount: 168,\n  totalIssuesFixed: 405,\n  totalTimeSaved: 1954,\n  rules: [{\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 153,\n    issuesFixedCount: 153\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 16,\n    issuesFixedCount: 28\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 34,\n    issuesFixedCount: 62\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 10,\n    issuesFixedCount: 10\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 17,\n    issuesFixedCount: 23\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 30,\n    issuesFixedCount: 72\n  }, {\n    ruleId: \"StringUtils\",\n    remediationCost: 10,\n    fileCount: 19,\n    issuesFixedCount: 29\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 7,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 18,\n    issuesFixedCount: 18\n  }]\n}, {\n  projectName: \"vert.x\",\n  timestampGitHubStart: 1542882517,\n  timestampJSparrowFinish: 1542883258,\n  totalFilesChanged: 407,\n  totalFilesCount: 442,\n  totalIssuesFixed: 1689,\n  totalTimeSaved: 7665,\n  rules: [{\n    ruleId: \"StandardLogger\",\n    remediationCost: 10,\n    fileCount: 38,\n    issuesFixedCount: 192\n  }, {\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 39,\n    issuesFixedCount: 66\n  }, {\n    ruleId: \"EnhancedForLoopToStreamForEach\",\n    remediationCost: 15,\n    fileCount: 31,\n    issuesFixedCount: 54\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 3,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"UseIsEmptyOnCollections\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 7\n  }, {\n    ruleId: \"EnhancedForLoopToStreamFindFirst\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"StatementLambdaToExpression\",\n    remediationCost: 5,\n    fileCount: 52,\n    issuesFixedCount: 187\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 12,\n    issuesFixedCount: 31\n  }, {\n    ruleId: \"FunctionalInterface\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"LambdaForEachMap\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"MultiVariableDeclarationLine\",\n    remediationCost: 2,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 54,\n    issuesFixedCount: 55\n  }, {\n    ruleId: \"EnumsWithoutEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 62,\n    issuesFixedCount: 386\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 26,\n    issuesFixedCount: 86\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 407,\n    issuesFixedCount: 407\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 16,\n    issuesFixedCount: 45\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 68,\n    issuesFixedCount: 123\n  }, {\n    ruleId: \"ReImplementingInterface\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"LambdaToMethodReference\",\n    remediationCost: 2,\n    fileCount: 13,\n    issuesFixedCount: 17\n  }, {\n    ruleId: \"RemoveExplicitCallToSuper\",\n    remediationCost: 1,\n    fileCount: 3,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"EnhancedForLoopToStreamAnyMatch\",\n    remediationCost: 2,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"LambdaForEachIfWrapperToFilter\",\n    remediationCost: 5,\n    fileCount: 4,\n    issuesFixedCount: 4\n  }]\n}, {\n  projectName: \"NetLicensingClient-java (Java 8)\",\n  timestampGitHubStart: 1549625479,\n  timestampJSparrowFinish: 1549625718,\n  totalFilesChanged: 77,\n  totalFilesCount: 95,\n  totalIssuesFixed: 167,\n  totalTimeSaved: 435,\n  rules: [{\n    fileCount: 9,\n    issuesFixedCount: 10,\n    remediationCost: 10,\n    ruleId: \"StandardLogger\"\n  }, {\n    fileCount: 3,\n    issuesFixedCount: 6,\n    remediationCost: 15,\n    ruleId: \"EnhancedForLoopToStreamForEach\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 5,\n    ruleId: \"GuardCondition\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 2,\n    ruleId: \"UseIsEmptyOnCollections\"\n  }, {\n    fileCount: 3,\n    issuesFixedCount: 6,\n    remediationCost: 5,\n    ruleId: \"StatementLambdaToExpression\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 2,\n    ruleId: \"PutIfAbsent\"\n  }, {\n    fileCount: 4,\n    issuesFixedCount: 4,\n    remediationCost: 5,\n    ruleId: \"RearrangeClassMembers\"\n  }, {\n    fileCount: 77,\n    issuesFixedCount: 77,\n    remediationCost: 1,\n    ruleId: \"CodeFormatter\"\n  }, {\n    fileCount: 12,\n    issuesFixedCount: 31,\n    remediationCost: 2,\n    ruleId: \"UseStringBuilderAppend\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 2,\n    ruleId: \"LambdaToMethodReference\"\n  }, {\n    fileCount: 16,\n    issuesFixedCount: 25,\n    remediationCost: 1,\n    ruleId: \"DiamondOperator\"\n  }, {\n    fileCount: 2,\n    issuesFixedCount: 3,\n    remediationCost: 5,\n    ruleId: \"StringConcatToPlus\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 5,\n    ruleId: \"LambdaForEachIfWrapperToFilter\"\n  }]\n}, {\n  projectName: \"NetLicensingClient-java (Java 7)\",\n  timestampGitHubStart: 1549889303,\n  timestampJSparrowFinish: 1549889715,\n  totalFilesChanged: 77,\n  totalFilesCount: 95,\n  totalIssuesFixed: 151,\n  totalTimeSaved: 305,\n  rules: [{\n    fileCount: 77,\n    issuesFixedCount: 77,\n    remediationCost: 1,\n    ruleId: \"CodeFormatter\"\n  }, {\n    fileCount: 9,\n    issuesFixedCount: 10,\n    remediationCost: 10,\n    ruleId: \"StandardLogger\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 5,\n    ruleId: \"GuardCondition\"\n  }, {\n    fileCount: 12,\n    issuesFixedCount: 31,\n    remediationCost: 2,\n    ruleId: \"UseStringBuilderAppend\"\n  }, {\n    fileCount: 1,\n    issuesFixedCount: 1,\n    remediationCost: 2,\n    ruleId: \"UseIsEmptyOnCollections\"\n  }, {\n    fileCount: 16,\n    issuesFixedCount: 24,\n    remediationCost: 1,\n    ruleId: \"DiamondOperator\"\n  }, {\n    fileCount: 4,\n    issuesFixedCount: 4,\n    remediationCost: 5,\n    ruleId: \"RearrangeClassMembers\"\n  }, {\n    fileCount: 2,\n    issuesFixedCount: 3,\n    remediationCost: 5,\n    ruleId: \"StringConcatToPlus\"\n  }]\n}, {\n  projectName: \"cucumber-jvm\",\n  timestampGitHubStart: 1542977106,\n  timestampJSparrowFinish: 1542977920,\n  totalFilesChanged: 260,\n  totalFilesCount: 265,\n  totalIssuesFixed: 656,\n  totalTimeSaved: 1575,\n  rules: [{\n    ruleId: \"GuardCondition\",\n    remediationCost: 5,\n    fileCount: 17,\n    issuesFixedCount: 22\n  }, {\n    ruleId: \"FieldRenaming\",\n    remediationCost: 15,\n    fileCount: 1,\n    issuesFixedCount: 3\n  }, {\n    ruleId: \"StringLiteralEqualityCheck\",\n    remediationCost: 10,\n    fileCount: 5,\n    issuesFixedCount: 41\n  }, {\n    ruleId: \"ImmutableStaticFinalCollections\",\n    remediationCost: 10,\n    fileCount: 3,\n    issuesFixedCount: 4\n  }, {\n    ruleId: \"ForToForEach\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"RearrangeClassMembers\",\n    remediationCost: 5,\n    fileCount: 26,\n    issuesFixedCount: 27\n  }, {\n    ruleId: \"RemoveEmptyStatement\",\n    remediationCost: 1,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"OverrideAnnotation\",\n    remediationCost: 5,\n    fileCount: 14,\n    issuesFixedCount: 36\n  }, {\n    ruleId: \"CodeFormatter\",\n    remediationCost: 1,\n    fileCount: 260,\n    issuesFixedCount: 260\n  }, {\n    ruleId: \"BracketsToControl\",\n    remediationCost: 2,\n    fileCount: 12,\n    issuesFixedCount: 30\n  }, {\n    ruleId: \"UseStringBuilderAppend\",\n    remediationCost: 2,\n    fileCount: 38,\n    issuesFixedCount: 60\n  }, {\n    ruleId: \"RemoveUnnecessaryThrows\",\n    remediationCost: 2,\n    fileCount: 6,\n    issuesFixedCount: 8\n  }, {\n    ruleId: \"StringFormatLineSeparator\",\n    remediationCost: 1,\n    fileCount: 2,\n    issuesFixedCount: 2\n  }, {\n    ruleId: \"StringBufferToBuilder\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"DiamondOperator\",\n    remediationCost: 1,\n    fileCount: 61,\n    issuesFixedCount: 152\n  }, {\n    ruleId: \"MultiCatch\",\n    remediationCost: 5,\n    fileCount: 5,\n    issuesFixedCount: 6\n  }, {\n    ruleId: \"PrimitiveBoxedForString\",\n    remediationCost: 5,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }, {\n    ruleId: \"PrimitiveObjectUseEquals\",\n    remediationCost: 2,\n    fileCount: 1,\n    issuesFixedCount: 1\n  }]\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./docs/.vuepress/statistics.js\n");

/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--3-0!./node_modules/babel-loader/lib??ref--3-1!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      statistics: __webpack_require__(/*! ../statistics.js */ \"./docs/.vuepress/statistics.js\")\n    };\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPyEuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPyEuL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPyEuL2RvY3MvLnZ1ZXByZXNzL2NvbXBvbmVudHMvT3BlblNvdXJjZVN0YXRpc3RpY3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/ODQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XG4gICAgPGRpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxTdGF0aXN0aWNzIDpzdGF0aXN0aWNzPVwic3RhdGlzdGljc1wiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdGlzdGljczpcbiAgICAgICAgICAgICAgICByZXF1aXJlKCcuLi9zdGF0aXN0aWNzLmpzJyksXG4gICAgICAgIH07XG4gICAgfVxufVxuPC9zY3JpcHQ+Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBSUE7QUFOQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"b0624b54-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"b0624b54-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", [_c(\"Statistics\", { attrs: { statistics: _vm.statistics } })], 1)\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzP3tcImNhY2hlRGlyZWN0b3J5XCI6XCJub2RlX21vZHVsZXMvQHZ1ZXByZXNzL2NvcmUvbm9kZV9tb2R1bGVzLy5jYWNoZS92dWVwcmVzc1wiLFwiY2FjaGVJZGVudGlmaWVyXCI6XCJiMDYyNGI1NC12dWUtbG9hZGVyLXRlbXBsYXRlXCJ9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/IS4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/IS4vZG9jcy8udnVlcHJlc3MvY29tcG9uZW50cy9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWZiNTM4NTImLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZG9jcy8udnVlcHJlc3MvY29tcG9uZW50cy9PcGVuU291cmNlU3RhdGlzdGljcy52dWU/YjJjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwiZGl2XCIsIFtcbiAgICBfYyhcImRpdlwiLCBbX2MoXCJTdGF0aXN0aWNzXCIsIHsgYXR0cnM6IHsgc3RhdGlzdGljczogX3ZtLnN0YXRpc3RpY3MgfSB9KV0sIDEpXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"b0624b54-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./docs/.vuepress/components/OpenSourceStatistics.vue?vue&type=template&id=1fb53852&\n");

/***/ })

}]);