# Define a base class that is related to the module to have a unique obfuscation for the deobfuscation service
-repackageclasses 'eu.jsparrow.rules.api'

# one keep needs to be defined (even if all access points are possible to obfuscate)
## made up class results in waring
-keepclassmembers class eu.jsparrow.rules.common.RuleDescription { public java.util.List getTags(); }
-keepclassmembers class eu.jsparrow.rules.common.visitor.AbstractASTRewriteASTVisitor { protected org.eclipse.jdt.core.dom.rewrite.ASTRewrite astRewrite; }
-keepclassmembers class eu.jsparrow.rules.common.visitor.AbstractASTRewriteASTVisitor { public org.eclipse.jdt.core.dom.CompilationUnit getCompilationUnit(); }
-keepclassmembers class eu.jsparrow.rules.common.visitor.AbstractASTRewriteASTVisitor { protected java.util.List listeners; }
-keepclassmembers class eu.jsparrow.rules.common.visitor.AbstractAddImportASTVisitor { protected org.eclipse.jdt.core.dom.Name addImport(java.lang.String);}
-keepclassmembers class eu.jsparrow.rules.common.visitor.AbstractAddImportASTVisitor { protected java.util.Optional addImportForStaticMethod(java.lang.String);}
-keepclassmembers class eu.jsparrow.rules.common.visitor.AbstractAddImportASTVisitor { protected void addAlreadyVerifiedImports(java.util.Collection);}
