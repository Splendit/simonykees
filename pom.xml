<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>at.splendit</groupId>
	<artifactId>eu.jsparrow</artifactId>
	<version>4.19.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>jSparrow :: parent</name>
	<description>jSparrow Parent</description>

	<licenses>
		<license>
			<name>Splendit IT-Consulting GmbH</name>
			<comments>Proprietary and confidential</comments>
		</license>
	</licenses>

	<organization>
		<name>Splendit IT-Consulting GmbH</name>
		<url>https://splendit.at/</url>
	</organization>

	<developers>
		<developer>
			<id>hannes.schweighofer</id>
			<name>Hannes Schweighofer</name>
			<email>hannes.schweighofer@splendit.at</email>
		</developer>
		<developer>
			<id>ludwig.werzowa</id>
			<name>Ludwig Werzowa</name>
			<email>ludwig.werzowa@splendit.at</email>
		</developer>
		<developer>
			<id>martin.huter</id>
			<name>Martin Huter</name>
			<email>martin.huter@splendit.at</email>
		</developer>
		<developer>
			<id>ardit.ymeri</id>
			<name>Ardit Ymeri</name>
			<email>ardit.ymeri@splendit.at</email>
		</developer>
		<developer>
			<id>andreja.sambolec</id>
			<name>Andreja Sambolec</name>
			<email>andreja.sambolec@splendit.at</email>
		</developer>
		<developer>
			<id>matthias.webhofer</id>
			<name>Matthias Webhofer</name>
			<email>matthias.webhofer@splendit.at</email>
		</developer>
		<developer>
			<id>ali.kardoush</id>
			<name>Ali Kardoush</name>
			<email>ali.kardoush@splendit.at </email>
		</developer>
		<developer>
			<id>hans-joerg.schroedl</id>
			<name>Hans-Jörg Schrödl</name>
			<email>hans-joerg.schroedl@splendit.at </email>
		</developer>
	</developers>

	<modules>
		<module>bundles</module>
		<module>tests</module>
		<module>features</module>

		<!-- release engineering -->
		<module>releng</module>

		<!-- The jsparrow-maven-plugin cannot be deployed alongside jSparrow. SIM-877
			will improve/fix this. -->
		<!-- <module>jsparrow-maven-plugin</module> -->
	</modules>

	<scm>
		<connection>scm:git:ssh://git@bitbucket.splendit.loc:7999/lm/simonykees.git</connection>
		<url>https://bitbucket.splendit.loc/projects/LM/repos/simonykees/browse</url>
		<developerConnection>scm:git:ssh://git@bitbucket.splendit.loc:7999/lm/simonykees.git</developerConnection>
	</scm>

	<issueManagement>
		<system>JIRA</system>
		<url>https://jira.splendit.loc/browse/SIM/</url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>https://jenkins.splendit.loc/view/simonykees/</url>
	</ciManagement>

	<distributionManagement>
		<repository>
			<id>pdrone</id>
			<url>${packagedrone.url.complete}</url>
		</repository>
	</distributionManagement>

	<properties>

		<!-- skipping install and deployment of non-site modules -->
		<maven.deploy.skip>true</maven.deploy.skip>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<tycho.version>2.4.0</tycho.version>
		<tycho.extras.version>2.4.0</tycho.extras.version>
		<tycho.test.platformArgs />
		<tycho.test.jvmArgs>-Xmx512m</tycho.test.jvmArgs>

		<maven.site.version>3.6</maven.site.version>
		<maven.wagon.version>2.12</maven.wagon.version>
		<maven.javadoc.version>2.10.4</maven.javadoc.version>
		<maven.info.version>2.9</maven.info.version>
		<maven.jxr.version>2.5</maven.jxr.version>
		<maven.surefire.version>2.20.1</maven.surefire.version>
		<maven.pmd.version>3.8</maven.pmd.version>
		<maven.findbugs.version>3.0.5</maven.findbugs.version>
		<maven.changelog.version>2.3</maven.changelog.version>
		<maven.versions.version>2.4</maven.versions.version>
		<maven.antrun.version>1.8</maven.antrun.version>
		<maven.assembly.version>3.0.0</maven.assembly.version>
		<maven.dependency.version>3.0.1</maven.dependency.version>
		<maven.clean.version>3.0.0</maven.clean.version>
		<maven.deploy.version>2.8.2</maven.deploy.version>
		<maven.install.version>2.5.2</maven.install.version>
		<maven.release.version>2.5.3</maven.release.version>
		<maven.resources.version>3.0.2</maven.resources.version>
		<proguard.plugin.version>2.4.0</proguard.plugin.version>
		<proguard.base.version>6.2.2</proguard.base.version>
		<sonar.plugin.version>3.9.0.2155</sonar.plugin.version>
		<jacoco.plugin.version>0.8.3</jacoco.plugin.version>

		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>

		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>

		<jsparrow.qualifier.quotes></jsparrow.qualifier.quotes>
		<jsparrow.qualifier.noProguard></jsparrow.qualifier.noProguard>
		<jsparrow.qualifier.production></jsparrow.qualifier.production>
		<jsparrow.qualifier.tycho>${jsparrow.qualifier.quotes}${jsparrow.qualifier.noProguard}${jsparrow.qualifier.production}${jsparrow.qualifier.quotes}</jsparrow.qualifier.tycho>

		<!-- is not referenced with keystore.directory because sonar plugin runs
			outside of the maven lifecycle. Works because currently because every source
			module is two layers deeper than the parent -->
		<sonar.jacoco.reportPaths>${project.basedir}/../../target/jacoco-it.exec</sonar.jacoco.reportPaths>
		<sonar.junit.reportPaths>${project.basedir}/target/surefire-reports</sonar.junit.reportPaths>
		<sonar.coverage.exclusions>**/jsparrow/ui/**/*</sonar.coverage.exclusions>
		<sonar.issue.ignore.multicriteria>e1,e2,e3,e4</sonar.issue.ignore.multicriteria>
		<sonar.issue.ignore.multicriteria.e1.ruleKey>squid:S00100</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*Test.java</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<sonar.issue.ignore.multicriteria.e2.ruleKey>squid:S3008</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>**/i18n/*Messages.java</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<sonar.issue.ignore.multicriteria.e3.ruleKey>squid:S00112</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>**/*Test.java</sonar.issue.ignore.multicriteria.e3.resourceKey>
		<sonar.issue.ignore.multicriteria.e4.ruleKey>squid:S3516</sonar.issue.ignore.multicriteria.e4.ruleKey>
		<sonar.issue.ignore.multicriteria.e4.resourceKey>**/*ASTVisitor.java</sonar.issue.ignore.multicriteria.e4.resourceKey>

		<!-- Workaround for surefire-argline bug. Required to make Jacoco work -->
		<test-argline>${tycho.test.jvmArgs} -Dfile.encoding=UTF-8</test-argline>

		<!-- The packagedrone url has to be set differently for upload and download -->
		<!-- Upload: used in distributionManagement for uploading to packagedrone -->
		<!-- Download: used in releng/site to provide a p2 repository for version
			2.5.1 -->
		<packagedrone.url.complete>${packagedrone.upload.prefix}${packagedrone.channel.suffix}</packagedrone.url.complete>
		<packagedrone.upload.prefix>http://packagedrone-vm-01.splendit.loc:8080/maven/</packagedrone.upload.prefix>
		<packagedrone.download.prefix>http://packagedrone-vm-01.splendit.loc:8080/p2/</packagedrone.download.prefix>
		<!-- The packagedrone URL is set by activating certain profiles -->
		<!-- The (develop) test noProguard is used when no other profile is specified -->
		<packagedrone.channel.suffix>jenkins-jSparrow-develop-test-noProguard</packagedrone.channel.suffix>

	</properties>

	<repositories>
		<repository>
			<id>2021-06-updates</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/eclipse/updates/4.20</url>
		</repository>
		<repository>
			<id>2021-06</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/releases/2021-06/</url>
		</repository>
		<repository>
			<id>2022-03</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/releases/2022-03/</url>
		</repository>		
		<repository>
			<id>orbit</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/tools/orbit/downloads/drops/R20211213173813/repository/</url>
		</repository>
		<repository>
			<id>external</id>
			<layout>p2</layout>
			<url>http://packagedrone-vm-01.splendit.loc:8080/p2/jsparrow-external-osgi-dependencies/</url>
		</repository>
		<repository>
			<id>mylyn</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/mylyn/releases/latest/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>jsparrow-maven-plugin</id>
			<name>jsparrow maven plugin</name>
			<url>http://packagedrone-vm-01.splendit.loc:8080/maven/jSparrow-maven-plugin-release-candidate/</url>
			<layout>default</layout>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<!-- ensures that Maven 3.0 is the minimal required version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.0</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>eu.jsparrow</groupId>
				<artifactId>jsparrow-maven-plugin</artifactId>
				<version>3.20.0</version>
			</plugin>

			<plugin>
				<!-- https://github.com/jdcasey/directory-maven-plugin#directory-of-goal -->
				<groupId>org.commonjava.maven.plugins</groupId>
				<artifactId>directory-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>directories</id>
						<goals>
							<goal>highest-basedir</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<property>keystore.directory</property>
							<project>
								<groupId>at.splendit</groupId>
								<artifactId>eu.jsparrow</artifactId>
							</project>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<resolver>p2</resolver>
					<pomDependencies>consider</pomDependencies>
					<!-- <ignoreTychoRepositories>true</ignoreTychoRepositories> -->
					<environments>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-webdav-jackrabbit</artifactId>
						<version>${maven.wagon.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<locales>en</locales>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<keystore>${keystore.directory}/jarsigner.keystore</keystore>
					<storepass>FZHr9ba3fRtRQ5NcNjDUGK7</storepass>
					<alias>jSparrow_selfsigned_keystore</alias>
					<keypass>XwVBE3B7B2VHYnJguHBYnKK</keypass>
				</configuration>
				<executions>
					<execution>
						<id>sign</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-packaging-plugin</artifactId>
					<version>${tycho.version}</version>
					<configuration>
						<format>yyyyMMdd-HHmm${jsparrow.qualifier.tycho}</format>
						<archive>
							<manifestEntries>
								<!-- "Built-By" should not be the logged in user -->
								<Built-By>Splendit IT-Consulting GmbH</Built-By>
							</manifestEntries>
							<!-- We do not want to include the pom in our artifacts -->
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-p2-repository-plugin</artifactId>
					<version>${tycho.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-surefire-plugin</artifactId>
					<version>${tycho.version}</version>
					<configuration>
						<useUIHarness>false</useUIHarness>
						<argLine>${tycho.testArgLine} ${test-argline}</argLine>
						<!-- kill test JVM if tests take more than 10 minutes (600 seconds)
							to finish -->
						<forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<configuration>
						<append>true</append>
					</configuration>
					<executions>
						<execution>
							<id>agent-for-ut</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>agent-for-it</id>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-site</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[3.0.0,)
										</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!-- Plugin will be ignored for the m2e connector which can not handle
									it -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.commonjava.maven.plugins
										</groupId>
										<artifactId>
											directory-maven-plugin
										</artifactId>
										<versionRange>
											[0.3,)
										</versionRange>
										<goals>
											<goal>directory-of</goal>
											<goal>highest-basedir</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<!-- https://github.com/jdcasey/directory-maven-plugin#directory-of-goal -->
					<groupId>org.commonjava.maven.plugins</groupId>
					<artifactId>directory-maven-plugin</artifactId>
					<version>0.3</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>macosx</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<tycho.test.platformArgs>-XstartOnFirstThread</tycho.test.platformArgs>
			</properties>
		</profile>
		<profile>
			<id>proguard</id>
			<activation>
				<property>
					<name>proguard</name>
				</property>
			</activation>
			<properties>
				<!-- skipping test for proguard because they dont work -->
				<maven.test.skip>true</maven.test.skip>

				<jsparrow.qualifier.noProguard></jsparrow.qualifier.noProguard>
			</properties>
		</profile>
		<profile>
			<id>noProguard</id>
			<activation>
				<property>
					<name>!proguard</name>
				</property>
			</activation>
			<properties>
				<jsparrow.qualifier.quotes>'</jsparrow.qualifier.quotes>
				<jsparrow.qualifier.noProguard>_noProguard</jsparrow.qualifier.noProguard>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<property>
					<name>!production</name>
				</property>
			</activation>
			<properties>
				<jsparrow.qualifier.quotes>'</jsparrow.qualifier.quotes>
				<jsparrow.qualifier.production>_test</jsparrow.qualifier.production>
			</properties>
		</profile>

		<!-- all deployment channels on packagedrone -->
		<!-- we only set the channel url suffix here -->
		<!-- Example: "jenkins-jSparrow-develop-test-noProguard" instead of "http://packagedrone-vm-01.splendit.loc:8080/p2/jenkins-jSparrow-develop-test-noProguard" -->
		<profile>
			<id>develop-test-noProguard</id>
			<properties>
				<packagedrone.channel.suffix>jenkins-jSparrow-develop-test-noProguard</packagedrone.channel.suffix>
			</properties>
		</profile>
		<profile>
			<id>develop-test-proguard</id>
			<properties>
				<packagedrone.channel.suffix>jenkins-jSparrow-develop-test-proguard</packagedrone.channel.suffix>
			</properties>
		</profile>
		<profile>
			<id>master-test-noProguard</id>
			<properties>
				<packagedrone.channel.suffix>jenkins-jSparrow-master-test-noProguard</packagedrone.channel.suffix>
			</properties>
		</profile>
		<profile>
			<id>master-test-proguard</id>
			<properties>
				<packagedrone.channel.suffix>jenkins-jSparrow-master-test-proguard</packagedrone.channel.suffix>
			</properties>
		</profile>
		<profile>
			<id>master-production-noProguard</id>
			<properties>
				<packagedrone.channel.suffix>jenkins-jSparrow-master-production-noProguard</packagedrone.channel.suffix>
			</properties>
		</profile>
		<profile>
			<id>master-production-proguard</id>
			<properties>
				<packagedrone.channel.suffix>jenkins-jSparrow-master-production-proguard</packagedrone.channel.suffix>
			</properties>
		</profile>
		<profile>
			<id>releaseCandidate</id>
			<properties>
				<packagedrone.channel.suffix>jSparrow-release-candidate</packagedrone.channel.suffix>
			</properties>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.info.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.version}</version>
				<configuration>
					<linkJavadoc>true</linkJavadoc>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${maven.changelog.version}</version>
				<configuration>
					<type>range</type>
					<range>365</range>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${maven.versions.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${maven.findbugs.version}</version>
			</plugin>
		</plugins>
	</reporting>

</project>
