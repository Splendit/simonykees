package at.splendit.simonykees.core.ui;

import org.eclipse.ltk.core.refactoring.DocumentChange;
import org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.SashForm;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;

import at.splendit.simonykees.core.i18n.Messages;

/**
 * The warning concerning restrictions is generated by a call to
 * {@link TextEditChangePreviewViewer}, which is an internal Eclipse class
 * 
 * @author Ludwig Werzowa
 * @since 0.9
 *
 */
@SuppressWarnings("restriction")
public class ChangePreviewWizardPage extends AbstractWizardPage {

	private DocumentChange documentChange;

	/**
	 * Create the WizardPage for the {@link DocumentChange}
	 * 
	 * @param documentChange
	 *            the change in the document that is displayed with this
	 *            WizardPage
	 */
	public ChangePreviewWizardPage(DocumentChange documentChange) {
		super(Messages.ChangePreviewWizard_WizardPage);
		setTitle(Messages.ChangePreviewWizard_WizardPageTitle);
		setDescription(Messages.ChangePreviewWizard_Wizard_Page_Description);
		this.documentChange = documentChange;
	}

	@Override
	public void createControl(Composite parent) {

		Composite container = new Composite(parent, SWT.NONE);

		GridLayout layout = new GridLayout();
		layout.marginHeight = 0; // margin from TextEditChangePreviewViewer to
									// Composite
		layout.marginWidth = 0;
		container.setLayout(layout); // without setting the layout, nothing
										// displays

		setControl(container);

		SashForm sashForm = new SashForm(container, SWT.VERTICAL);

		GridData gridData = new GridData(GridData.FILL_BOTH); // GridData works
																// with
																// GridLayout
		// gridData.widthHint = convertWidthInCharsToPixels(80);
		sashForm.setLayoutData(gridData);

		TextEditChangePreviewViewer viewer = new TextEditChangePreviewViewer();
		viewer.createControl(sashForm);
		// viewer.setInput(new ChangePreviewViewerInput(textEditBasedChange));
		viewer.setInput(TextEditChangePreviewViewer.createInput(documentChange));

	}

}